<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>


<#
    // veri tabanı bağlantı stringi
    string connection = "Server=DESKTOP-E55K0K2\\SQLEXPRESS;Database=Northwind;Trusted_Connection=True;";
    
    // tablonun column'larina uygun class+proplari donduren method
    string GetTableData(string tableName)
    {
        using SqlConnection sqlConnection = new SqlConnection(connection);
        sqlConnection.Open();

        string query = 
            @"DECLARE @table NVARCHAR(250) = @tableName;

            DECLARE @classHeader NVARCHAR(MAX) = 'public class ' + @table + '
            {
            ';

            DECLARE @classFooter NVARCHAR(MAX) = '
            }';

            DECLARE @properties NVARCHAR(MAX) = (
            SELECT STRING_AGG(CONCAT(
            ' public ',
            IIF(DATA_TYPE = 'nvarchar' OR DATA_TYPE = 'nchar' OR DATA_TYPE = 'text' OR DATA_TYPE = 'ntext', 'string', ''),
            IIF(DATA_TYPE = 'int', 'int', ''),
            IIF(DATA_TYPE = 'smallint', 'short', ''),
            IIF(DATA_TYPE = 'tinyint', 'byte', ''),
            IIF(DATA_TYPE = 'money' OR DATA_TYPE = 'decimal' OR DATA_TYPE = 'numeric', 'decimal', ''),
            IIF(DATA_TYPE = 'float' OR DATA_TYPE = 'real', 'double', ''),
            IIF(DATA_TYPE = 'bit', 'bool', ''),
            IIF(DATA_TYPE = 'datetime' OR DATA_TYPE = 'date' OR DATA_TYPE = 'datetime2', 'DateTime', ''),
            IIF(DATA_TYPE = 'uniqueidentifier', 'Guid', ''),
            IIF(DATA_TYPE = 'binary' OR DATA_TYPE = 'varbinary' OR DATA_TYPE = 'image', 'byte[]', ''),
            ' ',
            COLUMN_NAME,
            ' { get; set; }',
            CHAR(13), CHAR(10)
            ), '') AS properties
            FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_NAME = @table
            AND TABLE_SCHEMA = 'dbo'
            );

            DECLARE @classDefinition NVARCHAR(MAX) = @classHeader + @properties + @classFooter;

            SELECT @classDefinition; ";

        using SqlCommand command = new SqlCommand(query, sqlConnection);
        command.Parameters.AddWithValue("@tableName", tableName);
        string result = (string)command.ExecuteScalar();

		return result;
    }

    // klasör oluşturma yolu
    string folderPath = Path.Combine(Host.ResolvePath("."), "Models");

    // klasör yoksa oluştur
    if (!Directory.Exists(folderPath))
    {
        Directory.CreateDirectory(folderPath);
    }

    // tablo adlarını al
    var tableNames = new List<string>();

    // veri tabanı bağlantısı
    using SqlConnection con = new SqlConnection(connection);
    con.Open();
    using SqlCommand cmd = new SqlCommand("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_CATALOG='Northwind'", con);
    using SqlDataReader reader = cmd.ExecuteReader();
    while (reader.Read())
    {
        tableNames.Add(reader[0].ToString().Replace(" ", ""));
    }

    // tablo adlarına göre dosya oluştur
    foreach (string tableName in tableNames)
    {
        string classPath = Path.Combine(folderPath, tableName + ".cs");

        // dosya yazma işlemi 
        using (FileStream fs = File.Create(classPath))
        {
            string content = GetTableData(tableName);
            byte[] contentBytes = Encoding.UTF8.GetBytes(content); //??
            fs.Write(contentBytes, 0, contentBytes.Length);        //??
        }
    }
#>
